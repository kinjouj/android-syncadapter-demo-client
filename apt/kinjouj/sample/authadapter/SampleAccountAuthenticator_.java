//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package kinjouj.sample.authadapter;

import android.accounts.AccountManager;
import android.app.Activity;
import android.content.Context;
import android.view.View;
import org.apache.http.conn.ClientConnectionManager;
import org.apache.http.conn.ssl.SSLSocketFactory;
import org.apache.http.impl.client.DefaultHttpClient;

public final class SampleAccountAuthenticator_
    extends SampleAccountAuthenticator
{

    private Context context_;

    private SampleAccountAuthenticator_(Context context) {
        super(context);
        context_ = context;
        init_();
    }

    public void afterSetContentView_() {
        if (!(context_ instanceof Activity)) {
            return ;
        }
        ((Service_) service).afterSetContentView_();
    }

    /**
     * You should check that context is an activity before calling this method
     * 
     */
    public View findViewById(int id) {
        Activity activity_ = ((Activity) context_);
        return activity_.findViewById(id);
    }

    @SuppressWarnings("all")
    private void init_() {
        if (context_ instanceof Activity) {
            Activity activity = ((Activity) context_);
        }
        mAccountManager = ((AccountManager) context_.getSystemService(Context.ACCOUNT_SERVICE));
        mContext = context_;
        service = Service_.getInstance_(context_);
        mHttpClient = new DefaultHttpClient() {


            @Override
            protected ClientConnectionManager createClientConnectionManager() {
                try {
                    ClientConnectionManager ccm = super.createClientConnectionManager();
                    ((SSLSocketFactory) ccm.getSchemeRegistry().getScheme("https").getSocketFactory()).setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
                    return ccm;
                } catch (Exception e) {
                    e.printStackTrace();
                    return super.createClientConnectionManager();
                }
            }

        }
        ;
    }

    public static SampleAccountAuthenticator_ getInstance_(Context context) {
        return new SampleAccountAuthenticator_(context);
    }

    public void rebind(Context context) {
        context_ = context;
        init_();
    }

}
